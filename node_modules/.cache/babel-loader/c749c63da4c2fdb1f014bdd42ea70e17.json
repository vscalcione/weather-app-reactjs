{"ast":null,"code":"var _jsxFileName = \"/home/vscalcione/weather-app-reactjs/src/components/countryList/countryListComponent.js\";\nimport React, { Component } from 'react';\nimport './countryListComponent.css'; // note that you can also export the source data via CountryRegionData. It's in a deliberately concise format to \n// keep file size down\n\nimport { CountryDropdown } from 'react-country-region-selector';\nexport class CustomCountryDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: '',\n      region: ''\n    };\n  }\n\n  selectCountry(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  selectRegion(val) {\n    this.setState({\n      region: val\n    });\n  }\n\n  render() {\n    const {\n      country\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CountryDropdown, {\n      value: country,\n      onChange: val => this.selectCountry(val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n/*import React, { Component } from 'react';\nimport Select from 'react-select'\nimport countryList from 'react-select-country-list'\n \nexport default class CountrySelector extends Component {\n  constructor(props) {\n    super(props)\n \n    this.options = countryList().getData()\n \n    this.state = {\n      options: this.options,\n      value: null,\n    }\n  }\n \n  changeHandler = value => {\n    this.setState({ value })\n  }\n \n  render() {\n    return (\n      <Select\n        name=\"country\" \n        options={this.state.options}\n        value={this.state.value}\n        onChange={this.changeHandler}\n      />\n    )\n  }\n}\n*/","map":{"version":3,"sources":["/home/vscalcione/weather-app-reactjs/src/components/countryList/countryListComponent.js"],"names":["React","Component","CountryDropdown","CustomCountryDropdown","constructor","props","state","country","region","selectCountry","val","setState","selectRegion","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,4BAAP,C,CAEA;AACA;;AACA,SAASC,eAAT,QAAgC,+BAAhC;AAGA,OAAO,MAAMC,qBAAN,SAAoCF,SAApC,CAA8C;AACnDG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAAb;AACD;;AAEDC,EAAAA,aAAa,CAAEC,GAAF,EAAO;AAClB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAEG;AAAX,KAAd;AACD;;AAEDE,EAAAA,YAAY,CAAEF,GAAF,EAAO;AACjB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,MAAM,EAAEE;AAAV,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEN,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAEC,OADT;AAEE,MAAA,QAAQ,EAAGG,GAAD,IAAS,KAAKD,aAAL,CAAmBC,GAAnB,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAvBkD;AA0BrD","sourcesContent":["import React, { Component } from 'react';\nimport './countryListComponent.css';\n\n// note that you can also export the source data via CountryRegionData. It's in a deliberately concise format to \n// keep file size down\nimport { CountryDropdown } from 'react-country-region-selector';\n\n\nexport class CustomCountryDropdown extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { country: '', region: '' };\n  }\n\n  selectCountry (val) {\n    this.setState({ country: val });\n  }\n\n  selectRegion (val) {\n    this.setState({ region: val });\n  }\n\n  render () {\n    const { country } = this.state;\n    return (\n      <div>\n        <CountryDropdown\n          value={country}\n          onChange={(val) => this.selectCountry(val)} />\n      </div>\n    );\n  }\n}\n\n/*import React, { Component } from 'react';\nimport Select from 'react-select'\nimport countryList from 'react-select-country-list'\n \nexport default class CountrySelector extends Component {\n  constructor(props) {\n    super(props)\n \n    this.options = countryList().getData()\n \n    this.state = {\n      options: this.options,\n      value: null,\n    }\n  }\n \n  changeHandler = value => {\n    this.setState({ value })\n  }\n \n  render() {\n    return (\n      <Select\n        name=\"country\" \n        options={this.state.options}\n        value={this.state.value}\n        onChange={this.changeHandler}\n      />\n    )\n  }\n}\n*/\n"]},"metadata":{},"sourceType":"module"}